import { invalidCells, userGrid } from './grid';
import { hints, hintName } from './hints'
import { SUDOKU_SIZE } from '@sudoku/constants';
import { derived, writable } from 'svelte/store';
import { strategyScheduler, runStrategyByName } from './strategies'

export const gamePaused = writable(true);

export const gameWon = derived(
	[userGrid, invalidCells],
	([$userGrid, $invalidCells]) => {
		for (let row = 0; row < SUDOKU_SIZE; row++) {
			for (let col = 0; col < SUDOKU_SIZE; col++) {
				if ($userGrid[row][col] === 0) return false;
			}
		}
		// No empty fields...

		return ($invalidCells.length === 0);
	},
	false,
);

function isGridAllZero(grid) {
    for (let row = 0; row < grid.length; row++) {
        for (let col = 0; col < grid[row].length; col++) {
            if (grid[row][col] !== 0) {
                return false; // 如果发现任何一个元素不是0，返回false
            }
        }
    }
    return true; // 如果所有元素都是0，返回true
}

export const gameLose = derived(
	[gameWon, userGrid, hints, hintName],
	([$gameWon, $userGrid, $hints, $hintName]) => {
		if (isGridAllZero($userGrid) ) {
			return false;
		}
		const {solvingResult, usedStrategyNames} = strategyScheduler($userGrid, $hints);
		if (solvingResult.length === 0 && $hints === 0) {
			return false;
		}
		let cg = 0;
		console.log('in game.js, ', solvingResult)
		solvingResult.forEach(result => {
			if (result['candidate'].length > 0) {
				cg = cg + 1;
			}
		});
		if (!$gameWon && cg === 0 && $hints !== 0) {
			console.log('输掉啦')
			return true;
		}
		return false;
	},
	false,
);