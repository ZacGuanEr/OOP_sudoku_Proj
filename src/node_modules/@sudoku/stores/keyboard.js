import { cursor } from './cursor';
import { gamePaused } from './game';
import { grid } from './grid';
import { hintCells, recordHintCells } from './hints';
import { derived } from 'svelte/store';

export const keyboardDisabled = derived(
	[cursor, grid, gamePaused],
	([$cursor, $grid, $gamePaused]) => {
		return ($cursor.x === null && $cursor.y === null) || $grid[$cursor.y][$cursor.x] !== 0 || $gamePaused;
	},
	false,
);

// 当游戏暂停时，hint按钮是禁用的
export const hintDisabled = derived(
	[gamePaused],
	([$gamePaused]) => {
		return $gamePaused;
	},
	false,
);

// 提供给键盘判断当前选中的格子是不是产生候选值的格子
export const candidatesNumDisable = derived(
	[cursor, grid, gamePaused, recordHintCells],
	([$cursor, $grid, $gamePaused, $recordHintCells]) => {

		return {
			isCandateNum: (keyNum) => {
				const key = $cursor.y + ',' + $cursor.x
				// 如果是候选值的格子，则禁用掉所有非候选值的数字
				if ($recordHintCells.hasOwnProperty(key)){
					const value =  $recordHintCells[key]['candidate'];
					for (let i = 0; i < value.length; i++) {
						const element = value[i];
						if (element === keyNum){
							return false;
						} 
					}
					return true;
				} else {
					console.log('空白待输入格子')
					return ($cursor.x === null && $cursor.y === null) || $grid[$cursor.y][$cursor.x] !== 0 || $gamePaused;
				}
			}
		}
	},
	false,
);